0x000:                      | 	.pos 0x0
0x000: 30f40002000000000000 | 	irmovq stack,%rsp
0x00a: 804400000000000000   | 	call main
0x013: 00                   | 	halt
                            | # data
0x014:                      | src:
0x014: 0a00000000000000     | 	.quad 0x00a
0x01c: b000000000000000     | 	.quad 0x0b0
0x024: 000c000000000000     | 	.quad 0xc00
0x02c:                      | dest:
0x02c: 1101000000000000     | 	.quad 0x111
0x034: 2202000000000000     | 	.quad 0x222
0x03c: 3303000000000000     | 	.quad 0x333
                            | # main
0x044: 30f71400000000000000 | main:	irmovq src,%rdi
0x04e: 30f62c00000000000000 | 	irmovq dest,%rsi
0x058: 30f20300000000000000 | 	irmovq $3,%rdx
0x062: a03f                 | 	pushq %rbx
0x064: a0cf                 | 	pushq %r12
0x066: a0df                 | 	pushq %r13
0x068: 807800000000000000   | 	call copy
0x071: b0df                 | 	popq %r13
0x073: b0cf                 | 	popq %r12
0x075: b03f                 | 	popq %rbx
0x077: 90                   | 	ret
                            | # copy
0x078: 6300                 | copy:	xorq %rax,%rax
0x07a: 80b300000000000000   | 	call test 
                            | 
0x083: 50d70000000000000000 | loop:	mrmovq (%rdi),%r13 	# src->dest
0x08d: 40d60000000000000000 | 	rmmovq %r13,(%rsi)
0x097: 63d0                 | 	xorq %r13,%rax		# checksum
0x099: 30fcffffffffffffffff | 	irmovq $-1,%r12
0x0a3: 60c2                 | 	addq %r12,%rdx		# len--
0x0a5: 30f30800000000000000 | 	irmovq $8,%rbx
0x0af: 6037                 | 	addq %rbx,%rdi
0x0b1: 6036                 | 	addq %rbx,%rsi		# next 
                            | 
                            | 
0x0b3: 6222                 | test:	andq %rdx,%rdx
0x0b5: 768300000000000000   | 	jg loop
0x0be:                      | return:
0x0be: 90                   | 	ret
                            | 
0x200:                      | .pos 0x200
0x200:                      | stack:
                            | 
